name: Publish CPU-Simulator
run-name: Publish CPU-Simulator
on:
  push:
    branches: [ main ]
jobs:
  create_release:
    name: Create GitHub Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: List files in the repository
        run: ls ${{ github.workspace }}

      - name: Find version of simulator
        id: version
        run: echo "VERSION=$(node -e "console.log(require('./package.json').version);")" >> "$GITHUB_ENV"
          
      - name: Echo version
        run: echo $VERSION

      - name: Create GitHub release
        uses: actions/create-release@v1
        id: create_release
        with:
          tag_name: "${{ env.VERSION }}"
          release_name: "Ihme-Core Simulator-v${{ env.VERSION }}"
          body_path: ./CHANGELOG.md
          draft: true
          prerelease: false
          repo: ${{ github.repository.name }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Save upload URL
        run: echo "UPLOAD_URL=${{ steps.create_release.outputs.upload_url }}" >> "$GITHUB_ENV"

  build_and_upload_linux:
    name:  Build and upload artifacts for Linux
    runs-on: ubuntu-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update package cache
        run: sudo apt update -y

      - name: Install mono
        run: sudo bash scripts/setup-mono.sh
        shell: bash

      - name: Install wine
        run: sudo bash scripts/setup-wine.sh
        shell: bash

      - name: Install dependencies
        run: npm install

      - name: Transpile TypeScript
        run: npx tsc

      - name: List repository contents
        run: ls ${{ github.workspace }}

      - name: Build
        run: npm --prefix ${{ github.workspace }} run make
      
      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./out/make/Ihme-Core X1 Simulator-${{ env.VERSION }} Setup
          asset_name: "Ihme-Core X1 Simulator-${{ env.VERSION }} Setup"
          asset_content_type: application/x-executable

  build_and_upload_windows:
    name: Build and upload artifacts for Windows
    runs-on: windows-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Transpile TypeScript
        run: npx tsc

      - name: List repository contents
        run: ls ${{ github.workspace }}

      - name: Build
        run: npm --prefix ${{ github.workspace }} run make

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./out/make/Ihme-Core X1 Simulator-${{ env.VERSION }} Setup.exe
          asset_name: "Ihme-Core X1 Simulator-${{ env.VERSION }} Setup.exe"
          asset_content_type: application/exe

  build_and_upload_mac:
    name: Build and upload artifacts for macOS
    runs-on: macos-latest
    needs: create_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm install

      - name: Transpile TypeScript
        run: npx tsc

      - name: Build
        run: npm run make

      - name: Upload artifact
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ env.UPLOAD_URL }}
          asset_path: ./out/make/Ihme-Core X1 Simulator-${{ env.VERSION }} Setup.app.zip
          asset_name: "Ihme-Core X1 Simulator-${{ env.VERSION }} Setup.app.zip"
          asset_content_type: application/zip